-- TODO: this will be replaced with a built-in primitive type
declare class buffer end

declare buffer: {
    create: (size: number) -> buffer,
    fromstring: (str: string) -> buffer,
    tostring: () -> string,
    len: (b: buffer) -> number,
    copy: (target: buffer, targetOffset: number, source: buffer, sourceOffset: number?, count: number?) -> (),
    fill: (b: buffer, offset: number, value: number, count: number?) -> (),
    readi8: (b: buffer, offset: number) -> number,
    readu8: (b: buffer, offset: number) -> number,
    readi16: (b: buffer, offset: number) -> number,
    readu16: (b: buffer, offset: number) -> number,
    readi32: (b: buffer, offset: number) -> number,
    readu32: (b: buffer, offset: number) -> number,
    readf32: (b: buffer, offset: number) -> number,
    readf64: (b: buffer, offset: number) -> number,
    writei8: (b: buffer, offset: number, value: number) -> (),
    writeu8: (b: buffer, offset: number, value: number) -> (),
    writei16: (b: buffer, offset: number, value: number) -> (),
    writeu16: (b: buffer, offset: number, value: number) -> (),
    writei32: (b: buffer, offset: number, value: number) -> (),
    writeu32: (b: buffer, offset: number, value: number) -> (),
    writef32: (b: buffer, offset: number, value: number) -> (),
    writef64: (b: buffer, offset: number, value: number) -> (),
    readstring: (b: buffer, offset: number, count: number) -> string,
    writestring: (b: buffer, offset: number, value: string, count: number?) -> (),
}