local Buwic = require("src/init")

local new_empty = Buwic.new()
assert(new_empty._cursor == 0, "initial cursor was not 0 after Buffer.new with no argument")
assert(buffer.len(new_empty._buffer) == 0, "Buffer.new without argument did not result in a 0 sized buffer")
assert(new_empty:capacity() == buffer.len(new_empty._buffer), "reported capacity did not match real size")
new_empty._cursor = 1337
assert(new_empty._cursor == new_empty:getCursor(), "getCursor did not report actual cursor")
new_empty:setCursor(0x1337)
assert(new_empty._cursor == 0x1337, "setCursor did not set cursor")
new_empty:reserve(42)
assert(new_empty:capacity() == 42, "reserve did not reserve extra capacity")
assert(new_empty:getCursor() == 0x1337, "reserve moved cursor")

local new_15 = Buwic.new(15)
assert(new_15._cursor == 0, "initial cursor was not 0 after Buffer.new with 15 as argument")
assert(buffer.len(new_15._buffer) == 15, "Buffer.new with 15 as argument did not result in a 15 sized buffer")
assert(new_15:capacity() == buffer.len(new_15._buffer), "reported capacity did not match real size")
new_15:setCursor(1337)
new_15:shrink(4)
assert(new_15:capacity() == 11, "shrink did not shrink buffer correctly")
assert(new_15:getCursor() == 11, "shrink did not move cursor when appropriate")
new_15:setCursor(4)
new_15:shrink(1)
assert(new_15:capacity() == 10, "shrink did not shrink buffer correctly")
assert(new_15:getCursor() == 4, "shrink moved cursor when inappropriate")

local from_str = Buwic.fromString("Hello, world!")
assert(from_str:capacity() == 13, "initial capacity after Buwic.fromString was wrong")
assert(from_str:toString() == "Hello, world!", "toString did not result in correct string")
from_str:shrink(8)
assert(from_str:capacity() == 5, "shrink did not shrink buffer correctly")
assert(from_str:toString() == "Hello", "shrink did not truncate buffer")

local from_buff = Buwic.fromBuffer(buffer.fromstring("Hello, world!"))
assert(from_buff:capacity() == 13, "initial capacity after Buwic.fromBuffer was wrong")
assert(from_buff:toString() == "Hello, world!", "toString did not result in correct string")
from_buff:shrink(8)
assert(from_buff:capacity() == 5, "shrink did not shrink buffer correctly")
assert(from_buff:toString() == "Hello", "shrink did not truncate buffer")

assert(Buwic.isA(nil) == false, "Buwic.isA returned true for nil")
assert(Buwic.isA(false) == false, "Buwic.isA returned true for false")
assert(Buwic.isA(true) == false, "Buwic.isA returned true for true")
assert(Buwic.isA("wow!") == false, "Buwic.isA returned true for string")
assert(Buwic.isA(42) == false, "Buwic.isA returned true for number")
assert(Buwic.isA(function() end) == false, "Buwic.isA returned true for function")
assert(Buwic.isA(coroutine.create(function() end)) == false, "Buwic.isA returned true for coroutine")
assert(Buwic.isA(newproxy()) == false, "Buwic.isA returned true for userdata")

assert(Buwic.isA(new_empty) == true, "Buwic.isA returned false for Buwic")
assert(Buwic.isA(new_15) == true, "Buwic.isA returned false for Buwic")
assert(Buwic.isA(from_str) == true, "Buwic.isA returned false for Buwic")
assert(Buwic.isA(from_buff) == true, "Buwic.isA returned false for Buwic")

return {}
